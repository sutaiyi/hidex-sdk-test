import t from"./web";import e from"./app";import r from"./cookie";import a from"./indexDB";import{isValidJSON as s}from"../common/utils";class o{catch;keyDefault="hidex-sdk-store";constructor(r){if("web"!==r){if("app"!==r)throw new Error("Catch constructor error");this.catch=new e}else this.catch=new t}async getItem(t){try{const e=await this.catch.getItem(`${this.keyDefault}-${t}`),r=s(e);return e&&r&&"undefined"!==e&&"null"!==e?JSON.parse(e):e}catch(t){return console.error(t),null}}async setItem(t,e){return await this.catch.setItem(`${this.keyDefault}-${t}`,"string"==typeof e?e:JSON.stringify(e))}async removeItem(t){return await this.catch.removeItem(`${this.keyDefault}-${t}`)}async getCookie(t){try{const e=await r.get(`${this.keyDefault}-${t}`),a=s(e);return e&&a&&"undefined"!==e&&"null"!==e?JSON.parse(e):e}catch(t){return console.error(t),null}}async setCookie(t,e,a){const{expires:s,path:o,secure:n}=a;return await r.set(`${this.keyDefault}-${t}`,"string"==typeof e?e:JSON.stringify(e),s,o,n)}async removeCookie(t,e){return await r.remove(`${this.keyDefault}-${t}`,e)}async getIdbItem(t){try{return await a.getItem(`${this.keyDefault}-${t}`)}catch(t){return console.error(t),null}}async setIdbItem(t,e,r){return await a.setItem(`${this.keyDefault}-${t}`,e,r)}async removeIdbItem(t){return await a.removeItem(`${this.keyDefault}-${t}`)}}export default o;