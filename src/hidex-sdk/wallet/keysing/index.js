import e from"../../common/eventEmitter";import t from"./message";import{keysingMessage as s}from"./config";class r extends e{secretCode=null;constructor(){super()}async keysingInitialized(e){const{value:s}=await t.initKeyRuntime(e);this.getSecretCode(e),this.secretCode=s}get(){return this.secretCode||""}messageConfirm(e){return e===s.get||e===s.set}messageProcess(e,t){const r=e.type===s.get?"GET":"SET",o={};"SET"===r&&(o[s.key]=e.value),t(r,o)}lock(e){this.secretCode=null,t.sendMessage({type:s.set,key:s.key,value:null},()=>{},e,0)}async isLocked(e){const s=await t.initKeyRuntime(e);return!!s?.value}booted(e,r,o){this.secretCode=e,t.sendMessage({type:s.set,key:s.key,value:this.secretCode},()=>{},r,o)}getSecretCode(e){try{if(t.sendMessage({type:s.get,key:s.key},e=>{this.secretCode=e?.value,this.emit("EventSecretCode",this.secretCode)},e,0),this.secretCode)return this.secretCode}catch(e){console.error(e)}}}export default new r;