export function randoxHex(t=8){const r="0123456789ABCDEF";let n="";for(let e=0;e<t;e++)n+=r.charAt(Math.floor(16*Math.random()));return n}export function shiftEncrypt(t,r){return t.split("").map(t=>{const n=t.charCodeAt(0);if(35===n)return String.fromCharCode(45);const e=n+r;return String.fromCharCode(e)}).join("")}export function toHex(t){const r=t.toString(16);return r.length%2==1?"0"+r:r}export function sign(t,r){const n=r+r%100,e=parseInt(t,16);return toHex(Math.abs(e^n))}export function getServerTime(){const t=sessionStorage.getItem("serverTsDifference"),r=Math.floor(Date.now()/1e3);if(t){const n=Number(t);if(!isNaN(n))return r+n}return r}export function getSolanaRpcHeard(t=2){const r=getServerTime(),n=randoxHex(),e=sign(n,r),o={};return o[shiftEncrypt("afgjj#icw",t)]=n,o[shiftEncrypt("afgjj#rq",t)]=r.toString(),o[shiftEncrypt("afgjj#qgel",t)]=e,o}export function getSolRpcOrigin(t,r){return global.location.origin}