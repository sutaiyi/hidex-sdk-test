import{PublicKey as e}from"@solana/web3.js";import*as t from"crypto-js";import r from"bs58";import{ethers as n}from"ethers";import o from"bignumber.js";export function isHexString(e){return/^[a-fA-F0-9]+$/.test(e)}export function isEthereumAddress(e){return e.startsWith("0x")&&42===e.length&&isHexString(e.slice(2))}export function isSolanaAddress(t){try{return new e(t),!0}catch(e){return!1}}export function checkAddressChain(e){try{return isSolanaAddress(e)?"SOLANA":isEthereumAddress(e)?"ETH":"Invalid address"}catch(e){throw new Error("Invalid address")}}export async function sha256(e){return t.SHA256(e).toString(t.enc.Hex)}export function isValidSHA256(e){return/^[a-fA-F0-9]{64}$/.test(e)}export function fillZeroNumber(e){return e<10?`0${e}`:`${e}`}export function numberToCharCode(e){if(e<0)throw new Error("The number must be greater than or equal to 0");return String.fromCharCode(64+e)}export function deepCopy(e){if("object"!=typeof e||null===e)return e;const t=Array.isArray(e)?[]:{};for(const r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=deepCopy(e[r]));return t}export function copyJson(e){let t=JSON.stringify(e);return t=JSON.parse(t),t}export function isValidEthPrivateKey(e){e.startsWith("0x")&&(e=e.slice(2));return/^[0-9a-fA-F]{64}$/.test(e)}export function isValidSolanaPrivateKey(e){try{return r.decode(e),!0}catch(e){throw new Error("Invalid private key")}}export function whosePrivater(e){if(isValidEthPrivateKey(e))return"ETH";if(isValidSolanaPrivateKey(e))return"SOLANA";throw new Error("Invalid private key")}export function findAndIncrementMax(e){if(0===e.length)return 0;return Math.max(...e)+1}export function noIntersection(e,t){const r=new Set(e);return t.some(e=>r.has(e))}export function tokenDecode(e){const t=(new n.utils.AbiCoder).decode(["address","string","string","uint8"],e);return{address:t[0],name:t[1],symbol:t[2],decimals:t[3]}}export async function bundlesStatuses(e){const t=await(await fetch("https://mainnet.block-engine.jito.wtf/api/v1/bundles",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({jsonrpc:"2.0",id:1,method:"getBundleStatuses",params:[[e]]})})).json();return t&&t.result&&t.result.value?{context:t.result.context,value:t.result.value.length>0?{...t.result.value[0],confirmationStatus:t.result.value[0].confirmation_status}:null}:{context:"",value:null}}export function addUniqueItem(e,t,r){return new Set(e.map(e=>e[r])).has(t[r])||e.push(t),e}export function removeDuplicateObjects(e,t){return e.filter((e,r,n)=>r===n.findIndex(r=>r[t]===e[t]))}export function mergeAndDeduplicateObjects(e,t,r){const n=[...e,...t];return Array.from(new Map(n.map(e=>[e[r],e])).values())}export function mergedRepeat(e,t,r){const n=[];return e.forEach(e=>{-1===t.findIndex(t=>t[r]===e[r])&&n.push(e)}),n}export function toLzString(e){return btoa(unescape(encodeURIComponent(e)))}export function lzStringTo(e){return decodeURIComponent(escape(atob(e)))}export function environmental(e,t,r){return"production"===global.window?.HidexConfig?.env?e:"development"===global.window?.HidexConfig?.env?r:"uat"===global.window?.HidexConfig?.env?t:e}export function globalSet(e,t){global.window[e]=t}export const isValidJSON=e=>{try{return JSON.parse(e),!0}catch(e){return!1}};export function strToNumberByDecimals(e,t){return e?Number(e)/Math.pow(10,t):0}export function formatNumberWithPrecision(e,t){let r=Number(e);if(isNaN(r))return r.toString();if(t<0)return e.toString();if(0===r)return 0===t?"0":"0."+"0".repeat(t);if(t<0)throw new Error("Precision must be non-negative");const n=new o(r);if(0===t)return n.integerValue(o.ROUND_CEIL).toFixed();const i=n.toFixed(100,o.ROUND_DOWN),[s,a=""]=i.split(".");let u=a.search(/[1-9]/);if(-1===u)return`${s}.${"0".repeat(t)}`;const c=a.slice(u,u+t);return`${s}.${(a.slice(0,u)+c).padEnd(u+t,"0")}`}export function getUseToken(){return"AccessToken"}export function axiosErrorMessage(e){return console.log(typeof e),"object"==typeof e&&e.response?JSON.stringify(e.response.data||e):JSON.stringify(e||{message:"axios error"})}