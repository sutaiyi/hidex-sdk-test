export default class e{_events={};on(e,t){return this._events[e]||(this._events[e]=[]),this._events[e].push(t),()=>this.off(e,t)}off(e,t){const n=this._events[e];if(!n)return void console.warn(`No listeners found for event: ${String(e)}`);if(!Array.isArray(n))return void console.error(`Listeners for event ${String(e)} is not an array:`,n);const s=n.length;this._events[e]=n.filter(e=>e!==t),this._events[e].length===s&&console.warn(`No matching listener found for event ${String(e)} to remove`)}emit(e,...t){const n=this._events[e];n&&n.slice().forEach(e=>e(...t))}once(e,t){const n=(...s)=>{this.off(e,n),t(...s)};return this.on(e,n)}}