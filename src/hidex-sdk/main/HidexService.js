import{bnbTokens as e,solTokens as t}from"../common/config";import i from"../network/NetworkService";import a from"../catch";import n from"../wallet/WalletService";import o from"../wallet/keysing";import r from"../trade/TradeService";import s from"../trade/utils/dexfee";import{globalSet as c}from"../common/utils";import h from"../utils/UtilsService";import l from"../package.json";export class HidexService{options;network;wallet;catcher;trade;dexFee;utils;constructor(e){console.log("HidexService constructor called and options are: ",e);let t="";l&&(t=`Hidex SDK Version: v${l.version}`,console.log(t)),this.options=e,this.utils=new h,this.catcher=new a(e.apparatus);const o=this.processOptions(e);this.network=new i(o),this.wallet=new n(o),o.network=this.network,o.wallet=this.wallet,this.dexFee=new s(o),this.trade=new r(o),c("HidexConfig",{...e,rpcList:this.chains(),time:(new Date).getTime(),version:t})}async init(){await o.keysingInitialized(this.catcher),this.wallet.eventSecretCode(),await this.wallet.getWalletCatch(this.catcher),await this.wallet.getCloudBootedOss(this.processOptions(this.options)),await this.wallet.walletInit()}processOptions(e){return{...e,options:e,catcher:this.catcher,environmental:this.environmental,chains:this.chains,networkChange:this.networkChange,init:this.init,network:this.network,wallet:this.wallet,dexFee:this.dexFee,utils:this.utils}}environmental(e,t,i){return"production"===this.options.env?e:"development"===this.options.env?i:"uat"===this.options.env?t:e}chains(i){const a=this.options.rpcList,n=(e,t,i)=>{const a=t.find(t=>t.chainId===e);if(!a)throw new Error(`Chain with ID ${e} not found`);return a.rpc?Array.from(new Set([...a.rpc.split(","),...i])):i},o=[{chainName:"Solana",chain:"SOLANA",dexscreenerChain:"solana",aveChain:"solana",gmgnChain:"sol",aliasChain:["SOL","SOLANA"],chainID:102,codexChainId:1399811149,okxChainId:501,token:"SOL",tokens:t,rpc:n(102,a,[]),blockExplorerUrls:["https://solscan.io"],blockExplorerName:"Solscan",defaultPath:"m/44'/501'/0'/0",swapName:"Jupiter",deTrade:"",defaultLimit:0,apieceOfTime:2e3},{chainName:"BSC",chain:"BSC",dexscreenerChain:"bsc",aveChain:"bsc",gmgnChain:"bsc",aliasChain:["BSC","BNB"],chainID:56,codexChainId:56,okxChainId:56,token:"BNB",tokens:e,rpc:n(56,a,["https://bsc-dataseed.bnbchain.org"]),blockExplorerUrls:["https://bscscan.com"],blockExplorerName:"Bscscan",defaultPath:"m/44'/60'/0'/0/0",swapName:"pancakeswap",deTrade:this.environmental("0xa079ACfE0CaCAC7C21457808354Ee876A330a79B","0x4f10DAab76d78F53684270dc8A3E2c0a32d58b62","0x4f10DAab76d78F53684270dc8A3E2c0a32d58b62"),defaultLimit:5e5,apieceOfTime:2e3}];if(i){if("string"==typeof i){return o.find(e=>e.aliasChain.includes(i.toUpperCase()))}if("number"==typeof i){return o.find(e=>e.chainID===i)}throw new Error(`Error chain: ${i}`)}return o}networkChange=e=>{this.trade.changeTradeService(e)}}