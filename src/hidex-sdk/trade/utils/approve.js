import{mTokenAddress as t}from"../../common/config";import e from"../../catch";import{isSol as r}from".";class o extends e{trade;network;constructor(t){super(t.apparatus),this.trade=t.trade,this.network=t.network}async hasApprovedInLoca(e,r,o){const a=this.network.get();if(e===t)return!0;const s=await this.get(a.chain,r,e);if(!s||s!==o){const t=await this.trade.getAllowance(e,r,o);if("0"!==t?.toString())return!0}return!!s}getApprovedVerify(t,e,r,o){setTimeout(async()=>{const a=await this.trade.getAllowance(t,e,r);"0"===a?.toString()&&this.remove(o,e,t)},800)}async execute(t,e,o,a){try{if(r(a))return!0;const s=this.network.get(a);this.getApprovedVerify(t,e,o,s.chain.toUpperCase());if(await this.hasApprovedInLoca(t,e,o))return this.set(s.chain,e,t,o),!0;return await this.trade.toApprove(t,e,o)&&await this.set(s.chain,e,t,o),!0}catch(t){throw new Error(t.message)}}async set(t,e,r,o){return(await this.getAll())[`${t.toLowerCase()}-${e.toLowerCase()}-${r.toLowerCase()}`]=o,await this.setItem("Approved-Tokens",o)}async get(t,e,r){return(await this.getAll())[`${t.toLowerCase()}-${e.toLowerCase()}-${r.toLowerCase()}`]}async getAll(){const t=await this.getItem("Approved-Tokens");return t&&"object"==typeof t?t:{}}async remove(t,e,r){const o=await this.getAll();return delete o[`${t.toLowerCase()}-${e.toLowerCase()}-${r.toLowerCase()}`],await this.setItem("Approved-Tokens",o)}}export default o;