import{mTokenAddress as r}from"../../common/config";import{SystemProgram as e,Transaction as t}from"@solana/web3.js";import{ASSOCIATED_TOKEN_PROGRAM_ID as o,createAssociatedTokenAccountInstruction as a,createCloseAccountInstruction as s,createSyncNativeInstruction as n,getAssociatedTokenAddress as i,TOKEN_PROGRAM_ID as d}from"@solana/spl-token";import{WSOL_MINT as c}from"../sol/config";import{isSol as l}from"./index";import{priorityFeeInstruction as w}from"../sol/instruction/InstructionCreator";export const isMotherTrad=(e,t)=>{const o=t.get(),a=e.in.address.toLowerCase(),s=e.out.address.toLowerCase();return a===o.tokens[0].address.toLowerCase()&&s===o.tokens[1].address.toLowerCase()?"MBTOWMB":a===o.tokens[1].address.toLowerCase()&&s===r.toLowerCase()?"WMBTOMB":""};const u=async(r,s,l,u)=>{const m=u.getProviderByChain(102),h=s.publicKey,f=BigInt(r),p=await i(c,h,!1,d,o),g=new t,k=await m.getAccountInfo(p),[y,C]=await w(1e5,Number(l));g.add(C),g.add(y),k||g.add(a(h,p,h,c,d,o)),g.add(e.transfer({fromPubkey:h,toPubkey:p,lamports:f})),g.add(n(p));return{error:null,result:{hash:await m.sendTransaction(g,[s],{skipPreflight:!0,preflightCommitment:"processed"})}}},m=async(r,e,o)=>{const a=o.getProviderByChain(102),n=r.publicKey;try{const o=await i(c,n),l=s(o,n,n,[],d),[u,m]=await w(1e5,Number(e)),h=new t;h.add(m),h.add(u),h.add(l),h.recentBlockhash=(await a.getLatestBlockhash()).blockhash,h.feePayer=n,h.sign(r);return{error:null,result:{hash:await a.sendRawTransaction(h.serialize(),{skipPreflight:!0,preflightCommitment:"processed"})}}}catch(r){throw console.error(r),new Error("交易失败请重试"+r)}};export async function wExchange(r,e,t,o,a,s){if(l(r)){const r=s.utils.ownerKeypair(e);if(0===t)return await u(a,r,o,s.network);if(1===t)return await m(r,o,s.network)}return{error:null,result:{hash:null}}}