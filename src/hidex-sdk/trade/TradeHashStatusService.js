import t from"../common/eventEmitter";import{isSol as e}from"./utils";import{setStatistics as s}from"../utils/timeStatistics";const i=new Map;export class TradeHashStatusService extends t{DEFAULTKEY="TradeHashes";HS;trade;timeCount;maxTime;constructor(t){super(),this.trade=t.trade,this.HS=t,this.timeCount=50,this.maxTime=15e3}getHashes=async()=>{const t=await this.HS.catcher.getItem(this.DEFAULTKEY);return t&&t.length>0?t.filter(t=>"Pending"===t.status):[]};setHash=async(t,e)=>((await this.getHashes()).push(e),await t.setItem(this.DEFAULTKEY,e));action=async t=>{i.clear(),console.time("HashStatusTimer"),s({timerKey:"HashStatus",isBegin:!0}),t.fetchCount=0;const a=async()=>{const{hash:s,chain:i,tradeType:m,bundles:o}=t;this.timeCount=50,e(i)?(this.timeCount=50,this.maxTime=15e3):(this.timeCount=1e3,this.maxTime=15e3);const{status:h,message:n}=await this.trade.getHashStatus(s,i);return"number"==typeof t.fetchCount&&(t.fetchCount+=1),console.log("hash status checkTimer: ",t),t.message=n,"Pending"!==h?(t.status=h,this.emit("HashStatusEvent",t),void(t.timer&&global.clearTimeout(t.timer))):(new Date).getTime()-t.createTime>=this.maxTime?(t.status="Failed","Failed"===t.status&&(t.failedType=1),this.emit("HashStatusEvent",t),void(t.timer&&global.clearTimeout(t.timer))):(t.timer&&global.clearTimeout(t.timer),void(t.timer=global.setTimeout(a,this.timeCount)))};i.set(t.hash,a())};hashsAction=async t=>{i.clear(),console.time("HashStatusTimer"),s({timerKey:"HashStatus",isBegin:!0}),t.fetchCount=0;const a=async()=>{const{hashs:s,chain:i,tradeType:m,bundles:o}=t;this.timeCount=50,e(i)?(this.timeCount=50,this.maxTime=15e3):(this.timeCount=1e3,this.maxTime=15e3);const{status:h,message:n}=await this.trade.getHashsStatus(s||[],i);return"number"==typeof t.fetchCount&&(t.fetchCount+=1),console.log("hash status checkTimer: ",t),t.message=n,"Pending"!==h?(t.status=h,this.emit("HashStatusEvent",t),void(t.timer&&global.clearTimeout(t.timer))):(new Date).getTime()-t.createTime>=this.maxTime?(t.status="Failed","Failed"===t.status&&(t.failedType=1),this.emit("HashStatusEvent",t),void(t.timer&&global.clearTimeout(t.timer))):(t.timer&&global.clearTimeout(t.timer),void(t.timer=global.setTimeout(a,this.timeCount)))};i.set(t.hash,a())}}export default TradeHashStatusService;